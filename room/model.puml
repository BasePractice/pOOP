@startuml
interface Entity
interface Static
interface Dynamic
interface Bug
interface Human
interface Screen

interface Entity {
    Любой взаимодействующий
    элемент модели
    --
    +UUID id()
    +int x()
    +int y()
    +int z()
    +int getLightRadius()
    +void render(Screen)
}
Entity::render --> Screen

interface Static extends Entity {
    Не перемещающийся
    объект
    --
}

interface Dynamic extends Entity {
    Перемещающийся
    объект
    --
    +void tick()
}

interface Bug extends Dynamic {
    Любое насекомое
    --
}

interface Human extends Dynamic {
    Человек
    --
    +void attack(AttackLimb limb)
}
Human::attack --> AttackLimb

interface Item extends Entity {
    Объект воздействия
    --
}

interface Screen {
    Отрисовка
    --
    +int width()
    +int height()
    +void clear(int color)
    +setOffset(int,int)
    +overlay(Screen,int,int)
    +render(int,int,int,int,int)
    +renderLight(int,int,int)
    +draw(String,int,int,int)
    +pixel(int);
    +xLatestOffset();
    +yLatestOffset();
}

abstract class AbstractEntity implements Entity {
    Общее представление
    об объекте
    --
    -id: int
    -x: int
    -y: int
    -z: int
    -side: int

    +UUID id()
    +int x()
    +int y()
    +int z()
}

class Player extends AbstractEntity implements Human {
    Игрок
    --
    -handItem: Item
    -lagItem : Item
}
Player::handItem --> Item
Player::lagItem  --> Item

class Fly extends AbstractEntity implements Bug {
    Муха
    --
}

class Beetle extends AbstractEntity implements Bug {
    Таракан
    --
}

class Scolopendra extends AbstractEntity implements Bug {
    Сколопендра
    --
}

class Slipper implements Item {
    Тапок
    --
}

class Swatter implements Item {
    Мухобойка
    --
}

class Fire implements Item {
    Аэрозолевый
    баллончик
    --
}

class DefaultScreen implements Screen {
    Реализация по умолчанию
    --
}

class DefaultCube implements Static {
    Куб некого
    объема
    --
}

enum AttackLimb {
    Атакующая конечность
    --
    LAG
    HAND
}

@enduml
